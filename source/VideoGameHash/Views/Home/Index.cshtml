@model VideoGameHash.Models.HomePageModel
@using System
@using System.Linq
@using VideoGameHash.Helpers;

@{
    ViewBag.Title = "Home Page";
}

<div class="col-xs-12">
    <h3>Welcome to Videogamehash, an infometrics site, focusing on videogames.</h3>
    <h5>Please search for a game below:</h5>

    @using (Html.BeginForm("GameDetails", "Home"))
    {
        <div class="input-group">
            <input id="gameMainSearch" name="gameTitle" type="text" class="form-control" placeholder="Search for title" aria-describedby="basic-addon2">
            <span class="input-group-btn">
                <input type="submit" class="btn" value="Go!" />
            </span>
        </div>
    }

</div>
<div class="row"></div>
<div class="col-xs-6">
    <div class="row"></div>
    <div class="main_page featured_section">
        <h3>Trending Games</h3>
    </div>
        <ul>
            @foreach (var item in Model.TrendingGames)
            {
                <li>@Html.ActionLink(@item, "GameDetails", new {gameTitle=item})</li>
            }
        </ul>
</div>
<div class="col-xs-6">
    <div class="row"></div>
    <div class="main_page featured_section">
        <h3>All Time Games</h3>
    </div>
        <ul>
            @foreach (var item in Model.PopularGames)
            {
                <li>@Html.ActionLink(@item, "GameDetails", new { gameTitle = item })</li>
            }
        </ul>
</div>
<div class="row"></div>
@*POLL SECTION////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*@
<div class="col-xs-12">
    <div class="row"></div>
        <div class="main_page featured_section">
            <h3>Poll</h3>
        </div>
        @foreach (var item in Model.Polls)
        {
            var className = "radio_class" + item.Id;
            var fieldIdName = "field_Id_" + item.Id;
            var radio_div_id = "radio_div_id_" + item.Id;
            var chartId = "chart_Id_" + item.Id;
            var pollBoxHeight = String.Format("{0}px", item.PollAnswers.Count() * 12 + 150);
            <div class="toolbox toolbox_bottom_space" style="height: @pollBoxHeight">
                <h6 class="toolbox_header">@item.Title</h6>
                <div id="@radio_div_id" class="toolbox_info">
                    <ol class="fields" id="@fieldIdName">
                        @foreach (var subItem in item.PollAnswers)
                        {
                            <li class="field"><input class="@className" type="radio" id="@subItem.Answer" value="@subItem.Id" name="@item.Title" /><label for="@subItem.Answer" class="radio_label">@subItem.Answer</label></li>
                        }
                    </ol>
                    <p>
                        <input type="submit" class="btn inactive poll_button" value="Vote" data-url="@Url.Action("SubmitPollVote", new { PollId = item.Id })" data-fieldid="@fieldIdName" data-chartid="@chartId" data-radiodivid="@radio_div_id"/>
                    </p>
                </div>
                <div id="@chartId" style="width:95%"></div>
            </div>
        }
</div>

    
@*Scripts*@
<script type="text/javascript">
    $(function() {
        $("#gameMainSearch").autocomplete({
            source: function(request, response) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("SearchGames")',
                    dataType: "json",
                    data: "{ 'search': '" + request.term + "'}",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        response($.map(data.data,
                            function(item) {
                                return {
                                    label: item,
                                    value: item
                                }
                            }));
                        //debugger;
                    },
                    error: function(result) {
                        alert(response.responseText);
                    },
                    failure: function() {
                        alert(response.responseText);
                    }
                });
            },
            minLength: 1,
            delay: 1000
        });
    })
</script>