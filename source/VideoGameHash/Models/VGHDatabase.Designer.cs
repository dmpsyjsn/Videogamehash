//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("VGHDatabase", "RolesUsersInRoles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.Roles), "UsersInRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.UsersInRoles), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "GameSystemGameSystemSortOrder", "GameSystem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.GameSystem), "GameSystemSortOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VideoGameHash.Models.GameSystemSortOrder))]
[assembly: EdmRelationshipAttribute("VGHDatabase", "GameSystemGameInfo", "GameSystem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.GameSystem), "GameInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.GameInfo), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "GamesGameInfo", "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.Games), "GameInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.GameInfo), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "UserProfileUsersInRoles", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.UserProfile), "UsersInRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.UsersInRoles), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "InfoTypeArticles", "InfoType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.InfoType), "Articles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.Articles), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "InfoSourceArticles", "InfoSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.InfoSource), "Articles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.Articles), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "InfoSourceInfoSourceRssUrls", "InfoSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.InfoSource), "InfoSourceRssUrls", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.InfoSourceRssUrls), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "GameSystemInfoSourceRssUrls", "GameSystem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.GameSystem), "InfoSourceRssUrls", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.InfoSourceRssUrls), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "GameSystemArticles", "GameSystem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.GameSystem), "Articles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.Articles), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "InfoTypeInfoSourceRssUrls", "InfoType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.InfoType), "InfoSourceRssUrls", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.InfoSourceRssUrls), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "InfoTypeInfoTypeSortOrder", "InfoType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.InfoType), "InfoTypeSortOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VideoGameHash.Models.InfoTypeSortOrder))]
[assembly: EdmRelationshipAttribute("VGHDatabase", "InfoSourceInfoSourceSortOrder", "InfoSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.InfoSource), "InfoSourceSortOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VideoGameHash.Models.InfoSourceSortOrder))]
[assembly: EdmRelationshipAttribute("VGHDatabase", "ArticlesFeaturedArticles", "Articles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.Articles), "FeaturedArticles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VideoGameHash.Models.FeaturedArticles))]
[assembly: EdmRelationshipAttribute("VGHDatabase", "TrendingGamesTrendingArticles", "TrendingGames", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.TrendingGames), "TrendingArticles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.TrendingArticles), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "GamesTrendingGames", "Games", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.Games), "TrendingGames", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.TrendingGames), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "InfoTypeTrendingGames", "InfoType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.InfoType), "TrendingGames", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.TrendingGames), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "ArticlesTrendingArticles", "Articles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.Articles), "TrendingArticles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.TrendingArticles), true)]
[assembly: EdmRelationshipAttribute("VGHDatabase", "PollPollAnswers", "Poll", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VideoGameHash.Models.Poll), "PollAnswers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VideoGameHash.Models.PollAnswers), true)]

#endregion

namespace VideoGameHash.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class VGHDatabaseContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new VGHDatabaseContainer object using the connection string found in the 'VGHDatabaseContainer' section of the application configuration file.
        /// </summary>
        public VGHDatabaseContainer() : base("name=VGHDatabaseContainer", "VGHDatabaseContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VGHDatabaseContainer object.
        /// </summary>
        public VGHDatabaseContainer(string connectionString) : base(connectionString, "VGHDatabaseContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new VGHDatabaseContainer object.
        /// </summary>
        public VGHDatabaseContainer(EntityConnection connection) : base(connection, "VGHDatabaseContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Membership> Memberships
        {
            get
            {
                if ((_Memberships == null))
                {
                    _Memberships = base.CreateObjectSet<Membership>("Memberships");
                }
                return _Memberships;
            }
        }
        private ObjectSet<Membership> _Memberships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Roles> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Roles>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Roles> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersInRoles> UsersInRoles
        {
            get
            {
                if ((_UsersInRoles == null))
                {
                    _UsersInRoles = base.CreateObjectSet<UsersInRoles>("UsersInRoles");
                }
                return _UsersInRoles;
            }
        }
        private ObjectSet<UsersInRoles> _UsersInRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameSystem> GameSystems
        {
            get
            {
                if ((_GameSystems == null))
                {
                    _GameSystems = base.CreateObjectSet<GameSystem>("GameSystems");
                }
                return _GameSystems;
            }
        }
        private ObjectSet<GameSystem> _GameSystems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Games> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Games>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Games> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameSystemSortOrder> GameSystemSortOrders
        {
            get
            {
                if ((_GameSystemSortOrders == null))
                {
                    _GameSystemSortOrders = base.CreateObjectSet<GameSystemSortOrder>("GameSystemSortOrders");
                }
                return _GameSystemSortOrders;
            }
        }
        private ObjectSet<GameSystemSortOrder> _GameSystemSortOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserProfile> UserProfiles
        {
            get
            {
                if ((_UserProfiles == null))
                {
                    _UserProfiles = base.CreateObjectSet<UserProfile>("UserProfiles");
                }
                return _UserProfiles;
            }
        }
        private ObjectSet<UserProfile> _UserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameIgnore> GameIgnores
        {
            get
            {
                if ((_GameIgnores == null))
                {
                    _GameIgnores = base.CreateObjectSet<GameIgnore>("GameIgnores");
                }
                return _GameIgnores;
            }
        }
        private ObjectSet<GameIgnore> _GameIgnores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameInfo> GameInfoes
        {
            get
            {
                if ((_GameInfoes == null))
                {
                    _GameInfoes = base.CreateObjectSet<GameInfo>("GameInfoes");
                }
                return _GameInfoes;
            }
        }
        private ObjectSet<GameInfo> _GameInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfoType> InfoTypes
        {
            get
            {
                if ((_InfoTypes == null))
                {
                    _InfoTypes = base.CreateObjectSet<InfoType>("InfoTypes");
                }
                return _InfoTypes;
            }
        }
        private ObjectSet<InfoType> _InfoTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfoSource> InfoSources
        {
            get
            {
                if ((_InfoSources == null))
                {
                    _InfoSources = base.CreateObjectSet<InfoSource>("InfoSources");
                }
                return _InfoSources;
            }
        }
        private ObjectSet<InfoSource> _InfoSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Articles> Articles
        {
            get
            {
                if ((_Articles == null))
                {
                    _Articles = base.CreateObjectSet<Articles>("Articles");
                }
                return _Articles;
            }
        }
        private ObjectSet<Articles> _Articles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfoSourceRssUrls> InfoSourceRssUrls
        {
            get
            {
                if ((_InfoSourceRssUrls == null))
                {
                    _InfoSourceRssUrls = base.CreateObjectSet<InfoSourceRssUrls>("InfoSourceRssUrls");
                }
                return _InfoSourceRssUrls;
            }
        }
        private ObjectSet<InfoSourceRssUrls> _InfoSourceRssUrls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfoSourceSortOrder> InfoSourceSortOrders
        {
            get
            {
                if ((_InfoSourceSortOrders == null))
                {
                    _InfoSourceSortOrders = base.CreateObjectSet<InfoSourceSortOrder>("InfoSourceSortOrders");
                }
                return _InfoSourceSortOrders;
            }
        }
        private ObjectSet<InfoSourceSortOrder> _InfoSourceSortOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfoTypeSortOrder> InfoTypeSortOrders
        {
            get
            {
                if ((_InfoTypeSortOrders == null))
                {
                    _InfoTypeSortOrders = base.CreateObjectSet<InfoTypeSortOrder>("InfoTypeSortOrders");
                }
                return _InfoTypeSortOrders;
            }
        }
        private ObjectSet<InfoTypeSortOrder> _InfoTypeSortOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturedArticles> FeaturedArticles
        {
            get
            {
                if ((_FeaturedArticles == null))
                {
                    _FeaturedArticles = base.CreateObjectSet<FeaturedArticles>("FeaturedArticles");
                }
                return _FeaturedArticles;
            }
        }
        private ObjectSet<FeaturedArticles> _FeaturedArticles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrendingArticles> TrendingArticles
        {
            get
            {
                if ((_TrendingArticles == null))
                {
                    _TrendingArticles = base.CreateObjectSet<TrendingArticles>("TrendingArticles");
                }
                return _TrendingArticles;
            }
        }
        private ObjectSet<TrendingArticles> _TrendingArticles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrendingGames> TrendingGames
        {
            get
            {
                if ((_TrendingGames == null))
                {
                    _TrendingGames = base.CreateObjectSet<TrendingGames>("TrendingGames");
                }
                return _TrendingGames;
            }
        }
        private ObjectSet<TrendingGames> _TrendingGames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Poll> Polls
        {
            get
            {
                if ((_Polls == null))
                {
                    _Polls = base.CreateObjectSet<Poll>("Polls");
                }
                return _Polls;
            }
        }
        private ObjectSet<Poll> _Polls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PollAnswers> PollAnswers
        {
            get
            {
                if ((_PollAnswers == null))
                {
                    _PollAnswers = base.CreateObjectSet<PollAnswers>("PollAnswers");
                }
                return _PollAnswers;
            }
        }
        private ObjectSet<PollAnswers> _PollAnswers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Memberships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberships(Membership membership)
        {
            base.AddObject("Memberships", membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Roles roles)
        {
            base.AddObject("Roles", roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersInRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersInRoles(UsersInRoles usersInRoles)
        {
            base.AddObject("UsersInRoles", usersInRoles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameSystems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameSystems(GameSystem gameSystem)
        {
            base.AddObject("GameSystems", gameSystem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Games games)
        {
            base.AddObject("Games", games);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameSystemSortOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameSystemSortOrders(GameSystemSortOrder gameSystemSortOrder)
        {
            base.AddObject("GameSystemSortOrders", gameSystemSortOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserProfiles(UserProfile userProfile)
        {
            base.AddObject("UserProfiles", userProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameIgnores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameIgnores(GameIgnore gameIgnore)
        {
            base.AddObject("GameIgnores", gameIgnore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameInfoes(GameInfo gameInfo)
        {
            base.AddObject("GameInfoes", gameInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfoTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfoTypes(InfoType infoType)
        {
            base.AddObject("InfoTypes", infoType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfoSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfoSources(InfoSource infoSource)
        {
            base.AddObject("InfoSources", infoSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Articles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArticles(Articles articles)
        {
            base.AddObject("Articles", articles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfoSourceRssUrls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfoSourceRssUrls(InfoSourceRssUrls infoSourceRssUrls)
        {
            base.AddObject("InfoSourceRssUrls", infoSourceRssUrls);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfoSourceSortOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfoSourceSortOrders(InfoSourceSortOrder infoSourceSortOrder)
        {
            base.AddObject("InfoSourceSortOrders", infoSourceSortOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfoTypeSortOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfoTypeSortOrders(InfoTypeSortOrder infoTypeSortOrder)
        {
            base.AddObject("InfoTypeSortOrders", infoTypeSortOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturedArticles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturedArticles(FeaturedArticles featuredArticles)
        {
            base.AddObject("FeaturedArticles", featuredArticles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrendingArticles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrendingArticles(TrendingArticles trendingArticles)
        {
            base.AddObject("TrendingArticles", trendingArticles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrendingGames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrendingGames(TrendingGames trendingGames)
        {
            base.AddObject("TrendingGames", trendingGames);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Polls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolls(Poll poll)
        {
            base.AddObject("Polls", poll);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PollAnswers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPollAnswers(PollAnswers pollAnswers)
        {
            base.AddObject("PollAnswers", pollAnswers);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="Articles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Articles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Articles object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="infoTypeId">Initial value of the InfoTypeId property.</param>
        /// <param name="infoSourceId">Initial value of the InfoSourceId property.</param>
        /// <param name="gameSystemId">Initial value of the GameSystemId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="link">Initial value of the Link property.</param>
        /// <param name="datePublished">Initial value of the DatePublished property.</param>
        public static Articles CreateArticles(global::System.Int32 id, global::System.Int32 infoTypeId, global::System.Int32 infoSourceId, global::System.Int32 gameSystemId, global::System.String title, global::System.String content, global::System.String link, global::System.DateTime datePublished)
        {
            Articles articles = new Articles();
            articles.Id = id;
            articles.InfoTypeId = infoTypeId;
            articles.InfoSourceId = infoSourceId;
            articles.GameSystemId = gameSystemId;
            articles.Title = title;
            articles.Content = content;
            articles.Link = link;
            articles.DatePublished = datePublished;
            return articles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfoTypeId
        {
            get
            {
                return _InfoTypeId;
            }
            set
            {
                OnInfoTypeIdChanging(value);
                ReportPropertyChanging("InfoTypeId");
                _InfoTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfoTypeId");
                OnInfoTypeIdChanged();
            }
        }
        private global::System.Int32 _InfoTypeId;
        partial void OnInfoTypeIdChanging(global::System.Int32 value);
        partial void OnInfoTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfoSourceId
        {
            get
            {
                return _InfoSourceId;
            }
            set
            {
                OnInfoSourceIdChanging(value);
                ReportPropertyChanging("InfoSourceId");
                _InfoSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfoSourceId");
                OnInfoSourceIdChanged();
            }
        }
        private global::System.Int32 _InfoSourceId;
        partial void OnInfoSourceIdChanging(global::System.Int32 value);
        partial void OnInfoSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameSystemId
        {
            get
            {
                return _GameSystemId;
            }
            set
            {
                OnGameSystemIdChanging(value);
                ReportPropertyChanging("GameSystemId");
                _GameSystemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameSystemId");
                OnGameSystemIdChanged();
            }
        }
        private global::System.Int32 _GameSystemId;
        partial void OnGameSystemIdChanging(global::System.Int32 value);
        partial void OnGameSystemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DatePublished
        {
            get
            {
                return _DatePublished;
            }
            set
            {
                OnDatePublishedChanging(value);
                ReportPropertyChanging("DatePublished");
                _DatePublished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePublished");
                OnDatePublishedChanged();
            }
        }
        private global::System.DateTime _DatePublished;
        partial void OnDatePublishedChanging(global::System.DateTime value);
        partial void OnDatePublishedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoTypeArticles", "InfoType")]
        public InfoType InfoType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeArticles", "InfoType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeArticles", "InfoType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfoType> InfoTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeArticles", "InfoType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfoType>("VGHDatabase.InfoTypeArticles", "InfoType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoSourceArticles", "InfoSource")]
        public InfoSource InfoSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSource>("VGHDatabase.InfoSourceArticles", "InfoSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSource>("VGHDatabase.InfoSourceArticles", "InfoSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfoSource> InfoSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSource>("VGHDatabase.InfoSourceArticles", "InfoSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfoSource>("VGHDatabase.InfoSourceArticles", "InfoSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GameSystemArticles", "GameSystem")]
        public GameSystem GameSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemArticles", "GameSystem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemArticles", "GameSystem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameSystem> GameSystemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemArticles", "GameSystem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameSystem>("VGHDatabase.GameSystemArticles", "GameSystem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "ArticlesFeaturedArticles", "FeaturedArticles")]
        public FeaturedArticles FeaturedArticle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeaturedArticles>("VGHDatabase.ArticlesFeaturedArticles", "FeaturedArticles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeaturedArticles>("VGHDatabase.ArticlesFeaturedArticles", "FeaturedArticles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeaturedArticles> FeaturedArticleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeaturedArticles>("VGHDatabase.ArticlesFeaturedArticles", "FeaturedArticles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeaturedArticles>("VGHDatabase.ArticlesFeaturedArticles", "FeaturedArticles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "ArticlesTrendingArticles", "TrendingArticles")]
        public EntityCollection<TrendingArticles> TrendingArticles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrendingArticles>("VGHDatabase.ArticlesTrendingArticles", "TrendingArticles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrendingArticles>("VGHDatabase.ArticlesTrendingArticles", "TrendingArticles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="FeaturedArticles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturedArticles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedArticles object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="imageLink">Initial value of the ImageLink property.</param>
        public static FeaturedArticles CreateFeaturedArticles(global::System.Int32 id, global::System.String imageLink)
        {
            FeaturedArticles featuredArticles = new FeaturedArticles();
            featuredArticles.Id = id;
            featuredArticles.ImageLink = imageLink;
            return featuredArticles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageLink
        {
            get
            {
                return _ImageLink;
            }
            set
            {
                OnImageLinkChanging(value);
                ReportPropertyChanging("ImageLink");
                _ImageLink = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageLink");
                OnImageLinkChanged();
            }
        }
        private global::System.String _ImageLink;
        partial void OnImageLinkChanging(global::System.String value);
        partial void OnImageLinkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "ArticlesFeaturedArticles", "Articles")]
        public Articles Article
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Articles>("VGHDatabase.ArticlesFeaturedArticles", "Articles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Articles>("VGHDatabase.ArticlesFeaturedArticles", "Articles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Articles> ArticleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Articles>("VGHDatabase.ArticlesFeaturedArticles", "Articles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Articles>("VGHDatabase.ArticlesFeaturedArticles", "Articles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="GameIgnore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameIgnore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameIgnore object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="gameTitle">Initial value of the GameTitle property.</param>
        public static GameIgnore CreateGameIgnore(global::System.Int32 id, global::System.String gameTitle)
        {
            GameIgnore gameIgnore = new GameIgnore();
            gameIgnore.Id = id;
            gameIgnore.GameTitle = gameTitle;
            return gameIgnore;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GameTitle
        {
            get
            {
                return _GameTitle;
            }
            set
            {
                OnGameTitleChanging(value);
                ReportPropertyChanging("GameTitle");
                _GameTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GameTitle");
                OnGameTitleChanged();
            }
        }
        private global::System.String _GameTitle;
        partial void OnGameTitleChanging(global::System.String value);
        partial void OnGameTitleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="GameInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uSReleaseDate">Initial value of the USReleaseDate property.</param>
        /// <param name="gamesDbNetId">Initial value of the GamesDbNetId property.</param>
        /// <param name="gameSystemId">Initial value of the GameSystemId property.</param>
        /// <param name="gamesId">Initial value of the GamesId property.</param>
        public static GameInfo CreateGameInfo(global::System.Int32 id, global::System.DateTime uSReleaseDate, global::System.Int32 gamesDbNetId, global::System.Int32 gameSystemId, global::System.Int32 gamesId)
        {
            GameInfo gameInfo = new GameInfo();
            gameInfo.Id = id;
            gameInfo.USReleaseDate = uSReleaseDate;
            gameInfo.GamesDbNetId = gamesDbNetId;
            gameInfo.GameSystemId = gameSystemId;
            gameInfo.GamesId = gamesId;
            return gameInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime USReleaseDate
        {
            get
            {
                return _USReleaseDate;
            }
            set
            {
                OnUSReleaseDateChanging(value);
                ReportPropertyChanging("USReleaseDate");
                _USReleaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("USReleaseDate");
                OnUSReleaseDateChanged();
            }
        }
        private global::System.DateTime _USReleaseDate;
        partial void OnUSReleaseDateChanging(global::System.DateTime value);
        partial void OnUSReleaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GameImage
        {
            get
            {
                return _GameImage;
            }
            set
            {
                OnGameImageChanging(value);
                ReportPropertyChanging("GameImage");
                _GameImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GameImage");
                OnGameImageChanged();
            }
        }
        private global::System.String _GameImage;
        partial void OnGameImageChanging(global::System.String value);
        partial void OnGameImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Publisher
        {
            get
            {
                return _Publisher;
            }
            set
            {
                OnPublisherChanging(value);
                ReportPropertyChanging("Publisher");
                _Publisher = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Publisher");
                OnPublisherChanged();
            }
        }
        private global::System.String _Publisher;
        partial void OnPublisherChanging(global::System.String value);
        partial void OnPublisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Developer
        {
            get
            {
                return _Developer;
            }
            set
            {
                OnDeveloperChanging(value);
                ReportPropertyChanging("Developer");
                _Developer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Developer");
                OnDeveloperChanged();
            }
        }
        private global::System.String _Developer;
        partial void OnDeveloperChanging(global::System.String value);
        partial void OnDeveloperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Overview
        {
            get
            {
                return _Overview;
            }
            set
            {
                OnOverviewChanging(value);
                ReportPropertyChanging("Overview");
                _Overview = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Overview");
                OnOverviewChanged();
            }
        }
        private global::System.String _Overview;
        partial void OnOverviewChanging(global::System.String value);
        partial void OnOverviewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GamesDbNetId
        {
            get
            {
                return _GamesDbNetId;
            }
            set
            {
                OnGamesDbNetIdChanging(value);
                ReportPropertyChanging("GamesDbNetId");
                _GamesDbNetId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamesDbNetId");
                OnGamesDbNetIdChanged();
            }
        }
        private global::System.Int32 _GamesDbNetId;
        partial void OnGamesDbNetIdChanging(global::System.Int32 value);
        partial void OnGamesDbNetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameSystemId
        {
            get
            {
                return _GameSystemId;
            }
            set
            {
                OnGameSystemIdChanging(value);
                ReportPropertyChanging("GameSystemId");
                _GameSystemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameSystemId");
                OnGameSystemIdChanged();
            }
        }
        private global::System.Int32 _GameSystemId;
        partial void OnGameSystemIdChanging(global::System.Int32 value);
        partial void OnGameSystemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GamesId
        {
            get
            {
                return _GamesId;
            }
            set
            {
                OnGamesIdChanging(value);
                ReportPropertyChanging("GamesId");
                _GamesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamesId");
                OnGamesIdChanged();
            }
        }
        private global::System.Int32 _GamesId;
        partial void OnGamesIdChanging(global::System.Int32 value);
        partial void OnGamesIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GameSystemGameInfo", "GameSystem")]
        public GameSystem GameSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemGameInfo", "GameSystem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemGameInfo", "GameSystem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameSystem> GameSystemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemGameInfo", "GameSystem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameSystem>("VGHDatabase.GameSystemGameInfo", "GameSystem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GamesGameInfo", "Games")]
        public Games Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("VGHDatabase.GamesGameInfo", "Games").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("VGHDatabase.GamesGameInfo", "Games").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Games> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("VGHDatabase.GamesGameInfo", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Games>("VGHDatabase.GamesGameInfo", "Games", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="Games")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Games : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Games object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="gameTitle">Initial value of the GameTitle property.</param>
        public static Games CreateGames(global::System.Int32 id, global::System.String gameTitle)
        {
            Games games = new Games();
            games.Id = id;
            games.GameTitle = gameTitle;
            return games;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GameTitle
        {
            get
            {
                return _GameTitle;
            }
            set
            {
                OnGameTitleChanging(value);
                ReportPropertyChanging("GameTitle");
                _GameTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GameTitle");
                OnGameTitleChanged();
            }
        }
        private global::System.String _GameTitle;
        partial void OnGameTitleChanging(global::System.String value);
        partial void OnGameTitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GamesGameInfo", "GameInfo")]
        public EntityCollection<GameInfo> GameInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameInfo>("VGHDatabase.GamesGameInfo", "GameInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameInfo>("VGHDatabase.GamesGameInfo", "GameInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GamesTrendingGames", "TrendingGames")]
        public EntityCollection<TrendingGames> TrendingGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrendingGames>("VGHDatabase.GamesTrendingGames", "TrendingGames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrendingGames>("VGHDatabase.GamesTrendingGames", "TrendingGames", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="GameSystem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameSystem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameSystem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="gameSystemName">Initial value of the GameSystemName property.</param>
        public static GameSystem CreateGameSystem(global::System.Int32 id, global::System.String gameSystemName)
        {
            GameSystem gameSystem = new GameSystem();
            gameSystem.Id = id;
            gameSystem.GameSystemName = gameSystemName;
            return gameSystem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GameSystemName
        {
            get
            {
                return _GameSystemName;
            }
            set
            {
                OnGameSystemNameChanging(value);
                ReportPropertyChanging("GameSystemName");
                _GameSystemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GameSystemName");
                OnGameSystemNameChanged();
            }
        }
        private global::System.String _GameSystemName;
        partial void OnGameSystemNameChanging(global::System.String value);
        partial void OnGameSystemNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GameSystemGameSystemSortOrder", "GameSystemSortOrder")]
        public GameSystemSortOrder GameSystemSortOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystemSortOrder>("VGHDatabase.GameSystemGameSystemSortOrder", "GameSystemSortOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystemSortOrder>("VGHDatabase.GameSystemGameSystemSortOrder", "GameSystemSortOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameSystemSortOrder> GameSystemSortOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystemSortOrder>("VGHDatabase.GameSystemGameSystemSortOrder", "GameSystemSortOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameSystemSortOrder>("VGHDatabase.GameSystemGameSystemSortOrder", "GameSystemSortOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GameSystemGameInfo", "GameInfo")]
        public EntityCollection<GameInfo> GameInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameInfo>("VGHDatabase.GameSystemGameInfo", "GameInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameInfo>("VGHDatabase.GameSystemGameInfo", "GameInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GameSystemInfoSourceRssUrls", "InfoSourceRssUrls")]
        public EntityCollection<InfoSourceRssUrls> InfoSourceRssUrls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfoSourceRssUrls>("VGHDatabase.GameSystemInfoSourceRssUrls", "InfoSourceRssUrls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfoSourceRssUrls>("VGHDatabase.GameSystemInfoSourceRssUrls", "InfoSourceRssUrls", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GameSystemArticles", "Articles")]
        public EntityCollection<Articles> Articles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Articles>("VGHDatabase.GameSystemArticles", "Articles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Articles>("VGHDatabase.GameSystemArticles", "Articles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="GameSystemSortOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameSystemSortOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameSystemSortOrder object.
        /// </summary>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static GameSystemSortOrder CreateGameSystemSortOrder(global::System.Int32 sortOrder, global::System.Int32 id)
        {
            GameSystemSortOrder gameSystemSortOrder = new GameSystemSortOrder();
            gameSystemSortOrder.SortOrder = sortOrder;
            gameSystemSortOrder.Id = id;
            return gameSystemSortOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GameSystemGameSystemSortOrder", "GameSystem")]
        public GameSystem GameSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemGameSystemSortOrder", "GameSystem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemGameSystemSortOrder", "GameSystem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameSystem> GameSystemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemGameSystemSortOrder", "GameSystem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameSystem>("VGHDatabase.GameSystemGameSystemSortOrder", "GameSystem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="InfoSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfoSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfoSource object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="infoSourceName">Initial value of the InfoSourceName property.</param>
        public static InfoSource CreateInfoSource(global::System.Int32 id, global::System.String infoSourceName)
        {
            InfoSource infoSource = new InfoSource();
            infoSource.Id = id;
            infoSource.InfoSourceName = infoSourceName;
            return infoSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InfoSourceName
        {
            get
            {
                return _InfoSourceName;
            }
            set
            {
                OnInfoSourceNameChanging(value);
                ReportPropertyChanging("InfoSourceName");
                _InfoSourceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InfoSourceName");
                OnInfoSourceNameChanged();
            }
        }
        private global::System.String _InfoSourceName;
        partial void OnInfoSourceNameChanging(global::System.String value);
        partial void OnInfoSourceNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoSourceArticles", "Articles")]
        public EntityCollection<Articles> Articles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Articles>("VGHDatabase.InfoSourceArticles", "Articles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Articles>("VGHDatabase.InfoSourceArticles", "Articles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoSourceInfoSourceRssUrls", "InfoSourceRssUrls")]
        public EntityCollection<InfoSourceRssUrls> InfoSourceRssUrls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfoSourceRssUrls>("VGHDatabase.InfoSourceInfoSourceRssUrls", "InfoSourceRssUrls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfoSourceRssUrls>("VGHDatabase.InfoSourceInfoSourceRssUrls", "InfoSourceRssUrls", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoSourceInfoSourceSortOrder", "InfoSourceSortOrder")]
        public InfoSourceSortOrder InfoSourceSortOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSourceSortOrder>("VGHDatabase.InfoSourceInfoSourceSortOrder", "InfoSourceSortOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSourceSortOrder>("VGHDatabase.InfoSourceInfoSourceSortOrder", "InfoSourceSortOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfoSourceSortOrder> InfoSourceSortOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSourceSortOrder>("VGHDatabase.InfoSourceInfoSourceSortOrder", "InfoSourceSortOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfoSourceSortOrder>("VGHDatabase.InfoSourceInfoSourceSortOrder", "InfoSourceSortOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="InfoSourceRssUrls")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfoSourceRssUrls : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfoSourceRssUrls object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="infoSourceId">Initial value of the InfoSourceId property.</param>
        /// <param name="gameSystemId">Initial value of the GameSystemId property.</param>
        /// <param name="infoTypeId">Initial value of the InfoTypeId property.</param>
        /// <param name="uRL">Initial value of the URL property.</param>
        public static InfoSourceRssUrls CreateInfoSourceRssUrls(global::System.Int32 id, global::System.Int32 infoSourceId, global::System.Int32 gameSystemId, global::System.Int32 infoTypeId, global::System.String uRL)
        {
            InfoSourceRssUrls infoSourceRssUrls = new InfoSourceRssUrls();
            infoSourceRssUrls.Id = id;
            infoSourceRssUrls.InfoSourceId = infoSourceId;
            infoSourceRssUrls.GameSystemId = gameSystemId;
            infoSourceRssUrls.InfoTypeId = infoTypeId;
            infoSourceRssUrls.URL = uRL;
            return infoSourceRssUrls;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfoSourceId
        {
            get
            {
                return _InfoSourceId;
            }
            set
            {
                OnInfoSourceIdChanging(value);
                ReportPropertyChanging("InfoSourceId");
                _InfoSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfoSourceId");
                OnInfoSourceIdChanged();
            }
        }
        private global::System.Int32 _InfoSourceId;
        partial void OnInfoSourceIdChanging(global::System.Int32 value);
        partial void OnInfoSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameSystemId
        {
            get
            {
                return _GameSystemId;
            }
            set
            {
                OnGameSystemIdChanging(value);
                ReportPropertyChanging("GameSystemId");
                _GameSystemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameSystemId");
                OnGameSystemIdChanged();
            }
        }
        private global::System.Int32 _GameSystemId;
        partial void OnGameSystemIdChanging(global::System.Int32 value);
        partial void OnGameSystemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfoTypeId
        {
            get
            {
                return _InfoTypeId;
            }
            set
            {
                OnInfoTypeIdChanging(value);
                ReportPropertyChanging("InfoTypeId");
                _InfoTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfoTypeId");
                OnInfoTypeIdChanged();
            }
        }
        private global::System.Int32 _InfoTypeId;
        partial void OnInfoTypeIdChanging(global::System.Int32 value);
        partial void OnInfoTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoSourceInfoSourceRssUrls", "InfoSource")]
        public InfoSource InfoSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSource>("VGHDatabase.InfoSourceInfoSourceRssUrls", "InfoSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSource>("VGHDatabase.InfoSourceInfoSourceRssUrls", "InfoSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfoSource> InfoSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSource>("VGHDatabase.InfoSourceInfoSourceRssUrls", "InfoSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfoSource>("VGHDatabase.InfoSourceInfoSourceRssUrls", "InfoSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GameSystemInfoSourceRssUrls", "GameSystem")]
        public GameSystem GameSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemInfoSourceRssUrls", "GameSystem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemInfoSourceRssUrls", "GameSystem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameSystem> GameSystemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameSystem>("VGHDatabase.GameSystemInfoSourceRssUrls", "GameSystem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameSystem>("VGHDatabase.GameSystemInfoSourceRssUrls", "GameSystem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoTypeInfoSourceRssUrls", "InfoType")]
        public InfoType InfoType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeInfoSourceRssUrls", "InfoType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeInfoSourceRssUrls", "InfoType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfoType> InfoTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeInfoSourceRssUrls", "InfoType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfoType>("VGHDatabase.InfoTypeInfoSourceRssUrls", "InfoType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="InfoSourceSortOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfoSourceSortOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfoSourceSortOrder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static InfoSourceSortOrder CreateInfoSourceSortOrder(global::System.Int32 id, global::System.Int32 sortOrder)
        {
            InfoSourceSortOrder infoSourceSortOrder = new InfoSourceSortOrder();
            infoSourceSortOrder.Id = id;
            infoSourceSortOrder.SortOrder = sortOrder;
            return infoSourceSortOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoSourceInfoSourceSortOrder", "InfoSource")]
        public InfoSource InfoSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSource>("VGHDatabase.InfoSourceInfoSourceSortOrder", "InfoSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSource>("VGHDatabase.InfoSourceInfoSourceSortOrder", "InfoSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfoSource> InfoSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoSource>("VGHDatabase.InfoSourceInfoSourceSortOrder", "InfoSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfoSource>("VGHDatabase.InfoSourceInfoSourceSortOrder", "InfoSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="InfoType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfoType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfoType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="infoTypeName">Initial value of the InfoTypeName property.</param>
        /// <param name="useGameSystem">Initial value of the UseGameSystem property.</param>
        public static InfoType CreateInfoType(global::System.Int32 id, global::System.String infoTypeName, global::System.Boolean useGameSystem)
        {
            InfoType infoType = new InfoType();
            infoType.Id = id;
            infoType.InfoTypeName = infoTypeName;
            infoType.UseGameSystem = useGameSystem;
            return infoType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InfoTypeName
        {
            get
            {
                return _InfoTypeName;
            }
            set
            {
                OnInfoTypeNameChanging(value);
                ReportPropertyChanging("InfoTypeName");
                _InfoTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InfoTypeName");
                OnInfoTypeNameChanged();
            }
        }
        private global::System.String _InfoTypeName;
        partial void OnInfoTypeNameChanging(global::System.String value);
        partial void OnInfoTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseGameSystem
        {
            get
            {
                return _UseGameSystem;
            }
            set
            {
                OnUseGameSystemChanging(value);
                ReportPropertyChanging("UseGameSystem");
                _UseGameSystem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UseGameSystem");
                OnUseGameSystemChanged();
            }
        }
        private global::System.Boolean _UseGameSystem;
        partial void OnUseGameSystemChanging(global::System.Boolean value);
        partial void OnUseGameSystemChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoTypeArticles", "Articles")]
        public EntityCollection<Articles> Articles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Articles>("VGHDatabase.InfoTypeArticles", "Articles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Articles>("VGHDatabase.InfoTypeArticles", "Articles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoTypeInfoSourceRssUrls", "InfoSourceRssUrls")]
        public EntityCollection<InfoSourceRssUrls> InfoSourceRssUrls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfoSourceRssUrls>("VGHDatabase.InfoTypeInfoSourceRssUrls", "InfoSourceRssUrls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfoSourceRssUrls>("VGHDatabase.InfoTypeInfoSourceRssUrls", "InfoSourceRssUrls", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoTypeInfoTypeSortOrder", "InfoTypeSortOrder")]
        public InfoTypeSortOrder InfoTypeSortOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoTypeSortOrder>("VGHDatabase.InfoTypeInfoTypeSortOrder", "InfoTypeSortOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoTypeSortOrder>("VGHDatabase.InfoTypeInfoTypeSortOrder", "InfoTypeSortOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfoTypeSortOrder> InfoTypeSortOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoTypeSortOrder>("VGHDatabase.InfoTypeInfoTypeSortOrder", "InfoTypeSortOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfoTypeSortOrder>("VGHDatabase.InfoTypeInfoTypeSortOrder", "InfoTypeSortOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoTypeTrendingGames", "TrendingGames")]
        public EntityCollection<TrendingGames> TrendingGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrendingGames>("VGHDatabase.InfoTypeTrendingGames", "TrendingGames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrendingGames>("VGHDatabase.InfoTypeTrendingGames", "TrendingGames", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="InfoTypeSortOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfoTypeSortOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfoTypeSortOrder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static InfoTypeSortOrder CreateInfoTypeSortOrder(global::System.Int32 id, global::System.Int32 sortOrder)
        {
            InfoTypeSortOrder infoTypeSortOrder = new InfoTypeSortOrder();
            infoTypeSortOrder.Id = id;
            infoTypeSortOrder.SortOrder = sortOrder;
            return infoTypeSortOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoTypeInfoTypeSortOrder", "InfoType")]
        public InfoType InfoType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeInfoTypeSortOrder", "InfoType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeInfoTypeSortOrder", "InfoType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfoType> InfoTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeInfoTypeSortOrder", "InfoType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfoType>("VGHDatabase.InfoTypeInfoTypeSortOrder", "InfoType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Membership object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="isConfirmed">Initial value of the IsConfirmed property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="securityQuestion">Initial value of the SecurityQuestion property.</param>
        /// <param name="securityAnswer">Initial value of the SecurityAnswer property.</param>
        public static Membership CreateMembership(global::System.Int32 userId, global::System.DateTime createDate, global::System.Boolean isConfirmed, global::System.String password, global::System.String passwordSalt, global::System.String email, global::System.String securityQuestion, global::System.String securityAnswer)
        {
            Membership membership = new Membership();
            membership.UserId = userId;
            membership.CreateDate = createDate;
            membership.IsConfirmed = isConfirmed;
            membership.Password = password;
            membership.PasswordSalt = passwordSalt;
            membership.Email = email;
            membership.SecurityQuestion = securityQuestion;
            membership.SecurityAnswer = securityAnswer;
            return membership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfirmationToken
        {
            get
            {
                return _ConfirmationToken;
            }
            set
            {
                OnConfirmationTokenChanging(value);
                ReportPropertyChanging("ConfirmationToken");
                _ConfirmationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConfirmationToken");
                OnConfirmationTokenChanged();
            }
        }
        private global::System.String _ConfirmationToken;
        partial void OnConfirmationTokenChanging(global::System.String value);
        partial void OnConfirmationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsConfirmed
        {
            get
            {
                return _IsConfirmed;
            }
            set
            {
                OnIsConfirmedChanging(value);
                ReportPropertyChanging("IsConfirmed");
                _IsConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConfirmed");
                OnIsConfirmedChanged();
            }
        }
        private global::System.Boolean _IsConfirmed;
        partial void OnIsConfirmedChanging(global::System.Boolean value);
        partial void OnIsConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPasswordFailureDate
        {
            get
            {
                return _LastPasswordFailureDate;
            }
            set
            {
                OnLastPasswordFailureDateChanging(value);
                ReportPropertyChanging("LastPasswordFailureDate");
                _LastPasswordFailureDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordFailureDate");
                OnLastPasswordFailureDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPasswordFailureDate;
        partial void OnLastPasswordFailureDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPasswordFailureDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PasswordFailuresSinceLastSuccess
        {
            get
            {
                return _PasswordFailuresSinceLastSuccess;
            }
            set
            {
                OnPasswordFailuresSinceLastSuccessChanging(value);
                ReportPropertyChanging("PasswordFailuresSinceLastSuccess");
                _PasswordFailuresSinceLastSuccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFailuresSinceLastSuccess");
                OnPasswordFailuresSinceLastSuccessChanged();
            }
        }
        private Nullable<global::System.Int32> _PasswordFailuresSinceLastSuccess;
        partial void OnPasswordFailuresSinceLastSuccessChanging(Nullable<global::System.Int32> value);
        partial void OnPasswordFailuresSinceLastSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordChangeDate
        {
            get
            {
                return _PasswordChangeDate;
            }
            set
            {
                OnPasswordChangeDateChanging(value);
                ReportPropertyChanging("PasswordChangeDate");
                _PasswordChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordChangeDate");
                OnPasswordChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordChangeDate;
        partial void OnPasswordChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordVerificationToken
        {
            get
            {
                return _PasswordVerificationToken;
            }
            set
            {
                OnPasswordVerificationTokenChanging(value);
                ReportPropertyChanging("PasswordVerificationToken");
                _PasswordVerificationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordVerificationToken");
                OnPasswordVerificationTokenChanged();
            }
        }
        private global::System.String _PasswordVerificationToken;
        partial void OnPasswordVerificationTokenChanging(global::System.String value);
        partial void OnPasswordVerificationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordVerificationTokenExpirationDate
        {
            get
            {
                return _PasswordVerificationTokenExpirationDate;
            }
            set
            {
                OnPasswordVerificationTokenExpirationDateChanging(value);
                ReportPropertyChanging("PasswordVerificationTokenExpirationDate");
                _PasswordVerificationTokenExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordVerificationTokenExpirationDate");
                OnPasswordVerificationTokenExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordVerificationTokenExpirationDate;
        partial void OnPasswordVerificationTokenExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordVerificationTokenExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityQuestion
        {
            get
            {
                return _SecurityQuestion;
            }
            set
            {
                OnSecurityQuestionChanging(value);
                ReportPropertyChanging("SecurityQuestion");
                _SecurityQuestion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityQuestion");
                OnSecurityQuestionChanged();
            }
        }
        private global::System.String _SecurityQuestion;
        partial void OnSecurityQuestionChanging(global::System.String value);
        partial void OnSecurityQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityAnswer
        {
            get
            {
                return _SecurityAnswer;
            }
            set
            {
                OnSecurityAnswerChanging(value);
                ReportPropertyChanging("SecurityAnswer");
                _SecurityAnswer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityAnswer");
                OnSecurityAnswerChanged();
            }
        }
        private global::System.String _SecurityAnswer;
        partial void OnSecurityAnswerChanging(global::System.String value);
        partial void OnSecurityAnswerChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="Poll")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Poll : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Poll object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Poll CreatePoll(global::System.Int32 id, global::System.String title)
        {
            Poll poll = new Poll();
            poll.Id = id;
            poll.Title = title;
            return poll;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "PollPollAnswers", "PollAnswers")]
        public EntityCollection<PollAnswers> PollAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PollAnswers>("VGHDatabase.PollPollAnswers", "PollAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PollAnswers>("VGHDatabase.PollPollAnswers", "PollAnswers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="PollAnswers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PollAnswers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PollAnswers object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pollId">Initial value of the PollId property.</param>
        /// <param name="answer">Initial value of the Answer property.</param>
        /// <param name="numVotes">Initial value of the NumVotes property.</param>
        public static PollAnswers CreatePollAnswers(global::System.Int32 id, global::System.Int32 pollId, global::System.String answer, global::System.Int32 numVotes)
        {
            PollAnswers pollAnswers = new PollAnswers();
            pollAnswers.Id = id;
            pollAnswers.PollId = pollId;
            pollAnswers.Answer = answer;
            pollAnswers.NumVotes = numVotes;
            return pollAnswers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PollId
        {
            get
            {
                return _PollId;
            }
            set
            {
                OnPollIdChanging(value);
                ReportPropertyChanging("PollId");
                _PollId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PollId");
                OnPollIdChanged();
            }
        }
        private global::System.Int32 _PollId;
        partial void OnPollIdChanging(global::System.Int32 value);
        partial void OnPollIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumVotes
        {
            get
            {
                return _NumVotes;
            }
            set
            {
                OnNumVotesChanging(value);
                ReportPropertyChanging("NumVotes");
                _NumVotes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumVotes");
                OnNumVotesChanged();
            }
        }
        private global::System.Int32 _NumVotes;
        partial void OnNumVotesChanging(global::System.Int32 value);
        partial void OnNumVotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "PollPollAnswers", "Poll")]
        public Poll Poll
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("VGHDatabase.PollPollAnswers", "Poll").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("VGHDatabase.PollPollAnswers", "Poll").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Poll> PollReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poll>("VGHDatabase.PollPollAnswers", "Poll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Poll>("VGHDatabase.PollPollAnswers", "Poll", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Roles object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Roles CreateRoles(global::System.Int32 id, global::System.String roleName)
        {
            Roles roles = new Roles();
            roles.Id = id;
            roles.RoleName = roleName;
            return roles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "RolesUsersInRoles", "UsersInRoles")]
        public EntityCollection<UsersInRoles> UsersInRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInRoles>("VGHDatabase.RolesUsersInRoles", "UsersInRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInRoles>("VGHDatabase.RolesUsersInRoles", "UsersInRoles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="TrendingArticles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrendingArticles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrendingArticles object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="trendingGamesId">Initial value of the TrendingGamesId property.</param>
        /// <param name="articlesId">Initial value of the ArticlesId property.</param>
        public static TrendingArticles CreateTrendingArticles(global::System.Int32 id, global::System.Int32 trendingGamesId, global::System.Int32 articlesId)
        {
            TrendingArticles trendingArticles = new TrendingArticles();
            trendingArticles.Id = id;
            trendingArticles.TrendingGamesId = trendingGamesId;
            trendingArticles.ArticlesId = articlesId;
            return trendingArticles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrendingGamesId
        {
            get
            {
                return _TrendingGamesId;
            }
            set
            {
                OnTrendingGamesIdChanging(value);
                ReportPropertyChanging("TrendingGamesId");
                _TrendingGamesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrendingGamesId");
                OnTrendingGamesIdChanged();
            }
        }
        private global::System.Int32 _TrendingGamesId;
        partial void OnTrendingGamesIdChanging(global::System.Int32 value);
        partial void OnTrendingGamesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArticlesId
        {
            get
            {
                return _ArticlesId;
            }
            set
            {
                OnArticlesIdChanging(value);
                ReportPropertyChanging("ArticlesId");
                _ArticlesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArticlesId");
                OnArticlesIdChanged();
            }
        }
        private global::System.Int32 _ArticlesId;
        partial void OnArticlesIdChanging(global::System.Int32 value);
        partial void OnArticlesIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "TrendingGamesTrendingArticles", "TrendingGames")]
        public TrendingGames TrendingGame
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrendingGames>("VGHDatabase.TrendingGamesTrendingArticles", "TrendingGames").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrendingGames>("VGHDatabase.TrendingGamesTrendingArticles", "TrendingGames").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TrendingGames> TrendingGameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrendingGames>("VGHDatabase.TrendingGamesTrendingArticles", "TrendingGames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TrendingGames>("VGHDatabase.TrendingGamesTrendingArticles", "TrendingGames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "ArticlesTrendingArticles", "Articles")]
        public Articles Article
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Articles>("VGHDatabase.ArticlesTrendingArticles", "Articles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Articles>("VGHDatabase.ArticlesTrendingArticles", "Articles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Articles> ArticleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Articles>("VGHDatabase.ArticlesTrendingArticles", "Articles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Articles>("VGHDatabase.ArticlesTrendingArticles", "Articles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="TrendingGames")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrendingGames : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrendingGames object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="gamesId">Initial value of the GamesId property.</param>
        /// <param name="infoTypeId">Initial value of the InfoTypeId property.</param>
        public static TrendingGames CreateTrendingGames(global::System.Int32 id, global::System.Int32 gamesId, global::System.Int32 infoTypeId)
        {
            TrendingGames trendingGames = new TrendingGames();
            trendingGames.Id = id;
            trendingGames.GamesId = gamesId;
            trendingGames.InfoTypeId = infoTypeId;
            return trendingGames;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GamesId
        {
            get
            {
                return _GamesId;
            }
            set
            {
                OnGamesIdChanging(value);
                ReportPropertyChanging("GamesId");
                _GamesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GamesId");
                OnGamesIdChanged();
            }
        }
        private global::System.Int32 _GamesId;
        partial void OnGamesIdChanging(global::System.Int32 value);
        partial void OnGamesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfoTypeId
        {
            get
            {
                return _InfoTypeId;
            }
            set
            {
                OnInfoTypeIdChanging(value);
                ReportPropertyChanging("InfoTypeId");
                _InfoTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfoTypeId");
                OnInfoTypeIdChanged();
            }
        }
        private global::System.Int32 _InfoTypeId;
        partial void OnInfoTypeIdChanging(global::System.Int32 value);
        partial void OnInfoTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "TrendingGamesTrendingArticles", "TrendingArticles")]
        public EntityCollection<TrendingArticles> TrendingArticles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrendingArticles>("VGHDatabase.TrendingGamesTrendingArticles", "TrendingArticles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrendingArticles>("VGHDatabase.TrendingGamesTrendingArticles", "TrendingArticles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "GamesTrendingGames", "Games")]
        public Games Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("VGHDatabase.GamesTrendingGames", "Games").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("VGHDatabase.GamesTrendingGames", "Games").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Games> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Games>("VGHDatabase.GamesTrendingGames", "Games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Games>("VGHDatabase.GamesTrendingGames", "Games", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "InfoTypeTrendingGames", "InfoType")]
        public InfoType InfoType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeTrendingGames", "InfoType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeTrendingGames", "InfoType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfoType> InfoTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfoType>("VGHDatabase.InfoTypeTrendingGames", "InfoType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfoType>("VGHDatabase.InfoTypeTrendingGames", "InfoType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="UserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static UserProfile CreateUserProfile(global::System.Int32 id, global::System.String userName)
        {
            UserProfile userProfile = new UserProfile();
            userProfile.Id = id;
            userProfile.UserName = userName;
            return userProfile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "UserProfileUsersInRoles", "UsersInRoles")]
        public EntityCollection<UsersInRoles> UsersInRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInRoles>("VGHDatabase.UserProfileUsersInRoles", "UsersInRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInRoles>("VGHDatabase.UserProfileUsersInRoles", "UsersInRoles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="VGHDatabase", Name="UsersInRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersInRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersInRoles object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rolesId">Initial value of the RolesId property.</param>
        /// <param name="userProfileId">Initial value of the UserProfileId property.</param>
        public static UsersInRoles CreateUsersInRoles(global::System.Int32 id, global::System.Int32 rolesId, global::System.Int32 userProfileId)
        {
            UsersInRoles usersInRoles = new UsersInRoles();
            usersInRoles.Id = id;
            usersInRoles.RolesId = rolesId;
            usersInRoles.UserProfileId = userProfileId;
            return usersInRoles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RolesId
        {
            get
            {
                return _RolesId;
            }
            set
            {
                OnRolesIdChanging(value);
                ReportPropertyChanging("RolesId");
                _RolesId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RolesId");
                OnRolesIdChanged();
            }
        }
        private global::System.Int32 _RolesId;
        partial void OnRolesIdChanging(global::System.Int32 value);
        partial void OnRolesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserProfileId
        {
            get
            {
                return _UserProfileId;
            }
            set
            {
                OnUserProfileIdChanging(value);
                ReportPropertyChanging("UserProfileId");
                _UserProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserProfileId");
                OnUserProfileIdChanged();
            }
        }
        private global::System.Int32 _UserProfileId;
        partial void OnUserProfileIdChanging(global::System.Int32 value);
        partial void OnUserProfileIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "RolesUsersInRoles", "Roles")]
        public Roles Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("VGHDatabase.RolesUsersInRoles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("VGHDatabase.RolesUsersInRoles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Roles> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Roles>("VGHDatabase.RolesUsersInRoles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Roles>("VGHDatabase.RolesUsersInRoles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("VGHDatabase", "UserProfileUsersInRoles", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("VGHDatabase.UserProfileUsersInRoles", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("VGHDatabase.UserProfileUsersInRoles", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("VGHDatabase.UserProfileUsersInRoles", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("VGHDatabase.UserProfileUsersInRoles", "UserProfile", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
